<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sims.springbootsims.mapper.InsertMapper">
    <insert id="insertLogin">
        insert into Login (code, pwd, stateId)
        values (#{code}, #{pwd}, #{stateId});
    </insert>
    <insert id="insertTeacher" parameterType="com.sims.springbootsims.entity.TeacherBean">
        insert into Teacher (code, name, sex, age, education, goodAt, phone, QQ, email, address, introduction)
        values (${code}, ${name}, ${sex}, ${age}, ${education}, ${goodAt}, ${phone}, ${QQ}, ${email}, ${address},
                ${introduction})
    </insert>
    <insert id="insertStudent" parameterType="com.sims.springbootsims.entity.StudentBean">
        insert into Student (code, name, age, sex, QQ, phone, address, classId)
        values (${code}, ${name}, ${age}, ${sex}, ${QQ}, ${phone}, ${address}, ${classId})
    </insert>
    <select id="queryTeacherClass" resultType="com.sims.springbootsims.entity.TeacherClassBean">
        select *
        from TeacherClass
        <where>
            <if test="teacherId != 0">
                and tId = ${teacherId}
            </if>
            <if test="classId != 0">
                and classId = ${classId}
            </if>
            <if test="subjectId != 0">
                and (subId is null or subId = ${subjectId}
            </if>
        </where>
    </select>
    <delete id="deleteTeacherClass">
        delete
        from TeacherClass
        <where>
            <if test="teacherId != 0">
                and tId = ${teacherId}
            </if>
            <if test="classId != 0">
                and classId = ${classId}
            </if>
            <if test="subjectId != 0">
                and (subId is null or subId = ${subjectId}
            </if>
        </where>
    </delete>
    <insert id="insertTeacherClass" parameterType="com.sims.springbootsims.entity.TeacherClassBean">
        insert into TeacherClass (tId, classId, subId)
        values (${teacherId}, ${classId}, ${subjectId});
    </insert>
    <select id="queryGradeCode" resultType="Integer">
        select gradeCode
        from Grade
        order by id desc
    </select>
    <insert id="insertGrade" parameterType="com.sims.springbootsims.entity.GradeBean">
        insert into Grade (gradeCode, gradeName, createMessage)
        values (${gradeCode}, ${gradeName}, ${createMessage})
    </insert>
    <insert id="insertClass" parameterType="com.sims.springbootsims.entity.ClassBean">
        insert into Class (classCode, className, createMessage, gradeId)
        values (${classCode}, ${className}, ${createMessage}, ${gradeId})
    </insert>
    <select id="querySubjectCode" resultType="Integer">
        select subjectCode
        from Subject
        order by id desc
    </select>
    <insert id="insertSubject" parameterType="com.sims.springbootsims.entity.SubjectBean">
        insert into Subject (subjectCode, subjectName, createMessage, gradeId)
        values (${subjectCode}, ${subjectName}, ${createMessage}, ${gradeId})
    </insert>
    <insert id="insertResult" parameterType="com.sims.springbootsims.entity.ResultBean">
        insert into Result (sId, subId, result)
        values (${sId}, ${subId}, ${result})
    </insert>
    <insert id="insertAttendance" parameterType="com.sims.springbootsims.entity.AttendanceBean">
        insert into Attendance (sId, AttendanceType, subId, classId)
        values (${sId}, ${type}, ${subId}, ${classId})
    </insert>
    <select id="queryHabit" parameterType="String" resultType="com.sims.springbootsims.entity.HabitBean">
        select *
        from Habit
        where code = #{code}
    </select>
    <delete id="deleteHabit" parameterType="String">
        delete
        from Habit
        where code = #{code}
    </delete>
    <insert id="insertHabit" parameterType="com.sims.springbootsims.entity.HabitBean">
        insert into Habit (code, col1, col2, col3, col4, col5, col6, col7)
        values (${code}, ${col1}, ${col2}, ${col3}, ${col4}, ${col5}, ${col6}, ${col7})
    </insert>
</mapper>